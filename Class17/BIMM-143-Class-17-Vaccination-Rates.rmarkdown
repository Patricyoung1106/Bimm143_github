---
title: "BIMM 143 Lab 17 Vaccination Rates"
author: "Patric Young"
format: pdf
editor: visual
---


# COVID-19 Vaccination Rates


```{r}
vax <- read.csv("covid19vaccinesbyzipcode_test.csv")
head(vax)
```


**Q1.** What column details the total number of people fully vaccinated?


```{r}
#vax$persons_fully_vaccinated
```


**Q2.** What column details the Zip code tabulation area?


```{r}
#vax$zip_code_tabulation_area
```


**Q3.** What is the earliest date in this dataset?


```{r}
vax$as_of_date[1]
```


**Q4.** What is the latest date in this dataset?


```{r}
vax$as_of_date[nrow(vax)]
```


We can use the skim() function for a quick overview of a new data set like this.


```{r}
skimr::skim(vax)
```


**Q5.** How many numeric columns are in this data set?

13

**Q6.** Note that there are "missing values" in the data set. How many `NA` values there in the `persons_fully_vaccinated` column?


```{r}
n.missing <- sum(is.na(vax$persons_fully_vaccinated))
n.missing
```


**Q7.** What percent of `persons_fully_vaccinated` values are missing (to 2 significant figures)?


```{r}
round((n.missing/ nrow(vax))*100,2)
```


**Q8.** \[Optional\]: Why might this data be missing?

## Working with dates

The `lubridate` package makes working with dates and times in R much less of a pain. Let's have a first play with this package here.


```{r}
library(lubridate)
```

```{r}
today()
```


We can now magically do math with dates.


```{r}
today() - ymd("2021-01-05")
```


How old am I?


```{r}
today() - ymd("2001-03-15")
```


Let's treat the whole col.

How many days have passed since the first vaccination reported in this data set.


```{r}
vax$as_of_date <- ymd(vax$as_of_date)
today()- vax$as_of_date[1]
```


How many days does the dataset span.


```{r}
vax$as_of_date[nrow(vax)] - vax$as_of_date[1]
```


**Q9.** How many days have passed since the last update of the dataset?


```{r}
today()- vax$as_of_date[nrow(vax)]
```


**Q10.** How many unique dates are in the dataset (i.e.Â how many different dates are detailed)?67


```{r}
length(unique(vax$as_of_date))
```

```{r}
library(dplyr)

n_distinct(vax$as_of_date)
```


# Zip Codes

ZIP codes are rather annoying things to work with as they are numeric but not in the conventional sense of doing math.

Just like dates we have special packages to help us work with


```{r}
library(zipcodeR)
```

```{r}
geocode_zip('92037')
```

```{r}
reverse_zipcode(c('92037', "92109") )
```

```{r}
# Subset to San Diego county only areas
sd <- vax[ vax$county == "san Diego", ]
nrow(sd)
```

```{r}
library(dplyr)

sd <- filter(vax, county == "San Diego")

nrow(sd)
```

```{r}
library(dplyr)
sd.10 <- filter(vax, county == "San Diego" &
                age5_plus_population > 10000)
nrow(sd.10)
```

```{r}
n_distinct(sd.10$zip_code_tabulation_area)
```


**Q11.** How many distinct zip codes are listed for San Diego County?


```{r}
n_distinct(sd$zip_code_tabulation_area)
```


**Q12.** What San Diego County Zip code area has the largest 12 + Population in this dataset?


```{r}
ind <- which.max(sd$age12_plus_population)
sd$zip_code_tabulation_area [2]
```


**Q13.** What is the overall average "Percent of Population Fully Vaccinated" value for all San Diego "County" as of "2023-11-15"?


```{r}
vax$as_of_date[nrow(vax)]
```

```{r}
sd.today <- filter(sd, as_of_date == "2023-02-28")
```

```{r}
mean(sd.today$percent_of_population_fully_vaccinated, na.rm=T)
```


**Q14.** Using either ggplot or base R graphics make a summary figure that shows the distribution of Percent of Population Fully Vaccinated values as of "2022-11-15"?


```{r}
hist(sd.today$percent_of_population_fully_vaccinated, breaks=20)
```


## Focus on UCSD/La Jolla


```{r}
ucsd <- filter(sd, zip_code_tabulation_area=="92037")
ucsd[1,]$age5_plus_population
```


**Q15**. Using **ggplot** make a graph of the vaccination rate time course for the 92037 ZIP code area:


```{r}
library(ggplot2)
ucplot <- ggplot(ucsd) +
  aes(as_of_date, percent_of_population_fully_vaccinated) +
  geom_point()+
  geom_line(group=1) +
  xlab("Date")+
ylab("Proportion of Population Fully Vaccinated")+
  ylim(c(0,1)) 
ucplot
```

```{r}
# Subset to all CA areas with a population as large as 92037
vax.36 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2023-02-28")

#head(vax.36)
```


**Q16**. Calculate the mean *"Percent of Population Fully Vaccinated"* for ZIP code areas with a population as large as 92037 (La Jolla) *as_of_date* "2022-11-15". Add this as a straight horizontal line to your plot from above with the `geom_hline()` function?


```{r}
ave <- mean(vax.36$percent_of_population_fully_vaccinated)
ave

```

```{r}
ucplot + geom_hline(yintercept = ave, col="red", linetype =2)

```


**Q17.** What is the 6 number summary (Min, 1st Qu., Median, Mean, 3rd Qu., and Max) of the *"Percent of Population Fully Vaccinated"* values for ZIP code areas with a population as large as 92037 (La Jolla) *as_of_date* "2022-11-15"?


```{r}
summary(vax.36$percent_of_population_fully_vaccinated)
```


**Q18.** Using ggplot generate a histogram of this data.


```{r}
ggplot(vax.36)+
  aes(percent_of_population_fully_vaccinated)+
  geom_histogram()+
xlim(0,1)
```


**Q19**. Is the 92109 and 92040 ZIP code areas above or below the average value you calculated for all these above?

The 92109 and 92040 ZIP code areas are above the average value.


```{r}
x <- filter(vax.36, zip_code_tabulation_area %in% c("92109", "92040"))
x$percent_of_population_fully_vaccinated
```


**Q20.** Finally make a time course plot of vaccination progress for all areas in the full data set with a `age5_plus_population > 36144`.


```{r}
vax.36.all <- filter(vax, age5_plus_population > 36144)
ggplot(vax.36.all) +
  aes(as_of_date, percent_of_population_fully_vaccinated,
      percent_of_population_fully_vaccinated, 
      group=zip_code_tabulation_area) +
  geom_line(alpha=0.2, color="blue") +
  labs(x="Date", y="Percent_Vaccinated",
       title="Vaccination_rate_across_California",
       subtitle="Only_areas_with_a_population_above_36k_are_shown") +
  geom_hline(yintercept = ave, linetype=2)
```

